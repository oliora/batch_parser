Notes
-----

# DONE & at the end of line is skipped, &&, || or | at the end of line give an error

# DONE |&<>^() has no special meaning inside double quotes

# DONE ) treated as matched closing bracket (if unclosed one exists) or as a normal character

# DONE ^ escapes special chars |&<>() and @,

# DONE before any other char skipped, so ^X => X, ^^ => ^, echo before space just skipped

# DONE combine long lines by ^\n

# DONE: ^ escapes special meaning of " until special handling
  of ^"...^" strings implemented (see below).
  Note it's WORKAROUND.

# TODO parse labels (format?)

# TODO parse redirects (format?)

# TODO parse if and extract commands under it

# TODO parse for and extract commands under it

# TODO? ending spaces in quoted params which ends because of EOL/EOF should be cut:
  'call "123 456   ' => %1 is '"123 456' (note ending spaces)
  Could be solved by stripping out ending spaces for all params

# TODO? parse echo specially (all the args into one command)

#TODO? parse rem specially (all the args into one command)

# TODO? ^" opens a strange type of quoted arg: 
    - spaces allowed inside
    - arg should be closed with ^"
    - arg finished at first special char
    - if double quote found inside - execution stopped - 
    - if no double quote or special char found, line finished at 
      EOL/EOF as normal double quoted arg (i.e. at last non empty char in fact)
    
  call :print ^"12 34           ^
  echo 23 " 24
  =>
  call with %1 = '"12 34           echo 23 "', %2 = '24'
  
  call :print 12 ^" 34       & echo 23
  =>
  call: %1=12, %2:" 34, %3=,
  23
  
  call :print 12 ^" 34   "    & echo 23
  =>
  nothing outputed

Links
-----

Escaping: http://www.robvanderwoude.com/escapechars.php

